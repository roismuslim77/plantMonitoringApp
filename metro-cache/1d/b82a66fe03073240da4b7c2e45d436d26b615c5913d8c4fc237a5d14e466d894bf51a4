{"dependencies":[{"name":"./constants","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  exports.__esModule = true;\n  exports.default = createPersistoid;\n\n  var _constants = _$$_REQUIRE(_dependencyMap[0], \"./constants\");\n\n  function createPersistoid(config) {\n    var blacklist = config.blacklist || null;\n    var whitelist = config.whitelist || null;\n    var transforms = config.transforms || [];\n    var throttle = config.throttle || 0;\n    var storageKey = '' + (config.keyPrefix !== undefined ? config.keyPrefix : _constants.KEY_PREFIX) + config.key;\n    var storage = config.storage;\n    var serialize = config.serialize === false ? function (x) {\n      return x;\n    } : defaultSerialize;\n    var lastState = {};\n    var stagedState = {};\n    var keysToProcess = [];\n    var timeIterator = null;\n    var writePromise = null;\n\n    var update = function update(state) {\n      Object.keys(state).forEach(function (key) {\n        if (!passWhitelistBlacklist(key)) return;\n        if (lastState[key] === state[key]) return;\n        if (keysToProcess.indexOf(key) !== -1) return;\n        keysToProcess.push(key);\n      });\n      Object.keys(lastState).forEach(function (key) {\n        if (state[key] === undefined) {\n          keysToProcess.push(key);\n        }\n      });\n\n      if (timeIterator === null) {\n        timeIterator = setInterval(processNextKey, throttle);\n      }\n\n      lastState = state;\n    };\n\n    function processNextKey() {\n      if (keysToProcess.length === 0) {\n        if (timeIterator) clearInterval(timeIterator);\n        timeIterator = null;\n        return;\n      }\n\n      var key = keysToProcess.shift();\n      var endState = transforms.reduce(function (subState, transformer) {\n        return transformer.in(subState, key, lastState);\n      }, lastState[key]);\n\n      if (endState !== undefined) {\n        try {\n          stagedState[key] = serialize(endState);\n        } catch (err) {\n          console.error('redux-persist/createPersistoid: error serializing state', err);\n        }\n      } else {\n        delete stagedState[key];\n      }\n\n      if (keysToProcess.length === 0) {\n        writeStagedState();\n      }\n    }\n\n    function writeStagedState() {\n      Object.keys(stagedState).forEach(function (key) {\n        if (lastState[key] === undefined) {\n          delete stagedState[key];\n        }\n      });\n      writePromise = storage.setItem(storageKey, serialize(stagedState)).catch(onWriteFail);\n    }\n\n    function passWhitelistBlacklist(key) {\n      if (whitelist && whitelist.indexOf(key) === -1 && key !== '_persist') return false;\n      if (blacklist && blacklist.indexOf(key) !== -1) return false;\n      return true;\n    }\n\n    function onWriteFail(err) {\n      if (err && process.env.NODE_ENV !== 'production') {\n        console.error('Error storing data', err);\n      }\n    }\n\n    var flush = function flush() {\n      while (keysToProcess.length !== 0) {\n        processNextKey();\n      }\n\n      return writePromise || Promise.resolve();\n    };\n\n    return {\n      update: update,\n      flush: flush\n    };\n  }\n\n  function defaultSerialize(data) {\n    return JSON.stringify(data);\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"exports"],[4,2,3,0,"exports"],[4,9,3,7],[4,10,3,8,"__esModule"],[4,20,3,0],[4,23,3,21],[4,27,3,0],[5,0,4,0,"exports"],[5,2,4,0,"exports"],[5,9,4,7],[5,10,4,8,"default"],[5,17,4,0],[5,20,4,18,"createPersistoid"],[5,36,4,0],[7,0,6,0],[7,6,6,4,"_constants"],[7,16,6,14],[7,19,6,17,"require"],[7,30,6,24],[7,64,6,0],[9,0,10,0],[9,11,10,9,"createPersistoid"],[9,27,10,0],[9,28,10,26,"config"],[9,34,10,0],[9,36,10,34],[10,0,12,2],[10,8,12,6,"blacklist"],[10,17,12,15],[10,20,12,18,"config"],[10,26,12,24],[10,27,12,25,"blacklist"],[10,36,12,18],[10,40,12,38],[10,44,12,2],[11,0,13,2],[11,8,13,6,"whitelist"],[11,17,13,15],[11,20,13,18,"config"],[11,26,13,24],[11,27,13,25,"whitelist"],[11,36,13,18],[11,40,13,38],[11,44,13,2],[12,0,14,2],[12,8,14,6,"transforms"],[12,18,14,16],[12,21,14,19,"config"],[12,27,14,25],[12,28,14,26,"transforms"],[12,38,14,19],[12,42,14,40],[12,44,14,2],[13,0,15,2],[13,8,15,6,"throttle"],[13,16,15,14],[13,19,15,17,"config"],[13,25,15,23],[13,26,15,24,"throttle"],[13,34,15,17],[13,38,15,36],[13,39,15,2],[14,0,16,2],[14,8,16,6,"storageKey"],[14,18,16,16],[14,21,16,19],[14,27,16,25,"config"],[14,33,16,31],[14,34,16,32,"keyPrefix"],[14,43,16,25],[14,48,16,46,"undefined"],[14,57,16,25],[14,60,16,58,"config"],[14,66,16,64],[14,67,16,65,"keyPrefix"],[14,76,16,25],[14,79,16,77,"_constants"],[14,89,16,87],[14,90,16,88,"KEY_PREFIX"],[14,100,16,19],[14,104,16,102,"config"],[14,110,16,108],[14,111,16,109,"key"],[14,114,16,2],[15,0,17,2],[15,8,17,6,"storage"],[15,15,17,13],[15,18,17,16,"config"],[15,24,17,22],[15,25,17,23,"storage"],[15,32,17,2],[16,0,18,2],[16,8,18,6,"serialize"],[16,17,18,15],[16,20,18,18,"config"],[16,26,18,24],[16,27,18,25,"serialize"],[16,36,18,18],[16,41,18,39],[16,46,18,18],[16,49,18,47],[16,59,18,57,"x"],[16,60,18,47],[16,62,18,60],[17,0,19,4],[17,13,19,11,"x"],[17,14,19,4],[18,0,20,3],[18,5,18,18],[18,8,20,6,"defaultSerialize"],[18,24,18,2],[19,0,23,2],[19,8,23,6,"lastState"],[19,17,23,15],[19,20,23,18],[19,22,23,2],[20,0,24,2],[20,8,24,6,"stagedState"],[20,19,24,17],[20,22,24,20],[20,24,24,2],[21,0,25,2],[21,8,25,6,"keysToProcess"],[21,21,25,19],[21,24,25,22],[21,26,25,2],[22,0,26,2],[22,8,26,6,"timeIterator"],[22,20,26,18],[22,23,26,21],[22,27,26,2],[23,0,27,2],[23,8,27,6,"writePromise"],[23,20,27,18],[23,23,27,21],[23,27,27,2],[25,0,29,2],[25,8,29,6,"update"],[25,14,29,12],[25,17,29,15],[25,26,29,24,"update"],[25,32,29,15],[25,33,29,31,"state"],[25,38,29,15],[25,40,29,38],[26,0,31,4,"Object"],[26,6,31,4,"Object"],[26,12,31,10],[26,13,31,11,"keys"],[26,17,31,4],[26,18,31,16,"state"],[26,23,31,4],[26,25,31,23,"forEach"],[26,32,31,4],[26,33,31,31],[26,43,31,41,"key"],[26,46,31,31],[26,48,31,46],[27,0,32,6],[27,12,32,10],[27,13,32,11,"passWhitelistBlacklist"],[27,35,32,33],[27,36,32,34,"key"],[27,39,32,33],[27,40,32,6],[27,42,32,40],[28,0,33,6],[28,12,33,10,"lastState"],[28,21,33,19],[28,22,33,20,"key"],[28,25,33,19],[28,26,33,10],[28,31,33,29,"state"],[28,36,33,34],[28,37,33,35,"key"],[28,40,33,34],[28,41,33,6],[28,43,33,41],[29,0,34,6],[29,12,34,10,"keysToProcess"],[29,25,34,23],[29,26,34,24,"indexOf"],[29,33,34,10],[29,34,34,32,"key"],[29,37,34,10],[29,43,34,41],[29,44,34,42],[29,45,34,6],[29,47,34,45],[30,0,35,6,"keysToProcess"],[30,8,35,6,"keysToProcess"],[30,21,35,19],[30,22,35,20,"push"],[30,26,35,6],[30,27,35,25,"key"],[30,30,35,6],[31,0,36,5],[31,7,31,4],[32,0,40,4,"Object"],[32,6,40,4,"Object"],[32,12,40,10],[32,13,40,11,"keys"],[32,17,40,4],[32,18,40,16,"lastState"],[32,27,40,4],[32,29,40,27,"forEach"],[32,36,40,4],[32,37,40,35],[32,47,40,45,"key"],[32,50,40,35],[32,52,40,50],[33,0,41,6],[33,12,41,10,"state"],[33,17,41,15],[33,18,41,16,"key"],[33,21,41,15],[33,22,41,10],[33,27,41,25,"undefined"],[33,36,41,6],[33,38,41,36],[34,0,42,8,"keysToProcess"],[34,10,42,8,"keysToProcess"],[34,23,42,21],[34,24,42,22,"push"],[34,28,42,8],[34,29,42,27,"key"],[34,32,42,8],[35,0,43,7],[36,0,44,5],[36,7,40,4],[38,0,47,4],[38,10,47,8,"timeIterator"],[38,22,47,20],[38,27,47,25],[38,31,47,4],[38,33,47,31],[39,0,48,6,"timeIterator"],[39,8,48,6,"timeIterator"],[39,20,48,18],[39,23,48,21,"setInterval"],[39,34,48,32],[39,35,48,33,"processNextKey"],[39,49,48,32],[39,51,48,49,"throttle"],[39,59,48,32],[39,60,48,6],[40,0,49,5],[42,0,51,4,"lastState"],[42,6,51,4,"lastState"],[42,15,51,13],[42,18,51,16,"state"],[42,23,51,4],[43,0,52,3],[43,5,29,2],[45,0,54,2],[45,13,54,11,"processNextKey"],[45,27,54,2],[45,30,54,28],[46,0,55,4],[46,10,55,8,"keysToProcess"],[46,23,55,21],[46,24,55,22,"length"],[46,30,55,8],[46,35,55,33],[46,36,55,4],[46,38,55,36],[47,0,56,6],[47,12,56,10,"timeIterator"],[47,24,56,6],[47,26,56,24,"clearInterval"],[47,39,56,37],[47,40,56,38,"timeIterator"],[47,52,56,37],[47,53,56,24],[48,0,57,6,"timeIterator"],[48,8,57,6,"timeIterator"],[48,20,57,18],[48,23,57,21],[48,27,57,6],[49,0,58,6],[50,0,59,5],[52,0,61,4],[52,10,61,8,"key"],[52,13,61,11],[52,16,61,14,"keysToProcess"],[52,29,61,27],[52,30,61,28,"shift"],[52,35,61,14],[52,37,61,4],[53,0,62,4],[53,10,62,8,"endState"],[53,18,62,16],[53,21,62,19,"transforms"],[53,31,62,29],[53,32,62,30,"reduce"],[53,38,62,19],[53,39,62,37],[53,49,62,47,"subState"],[53,57,62,37],[53,59,62,57,"transformer"],[53,70,62,37],[53,72,62,70],[54,0,63,6],[54,15,63,13,"transformer"],[54,26,63,24],[54,27,63,25,"in"],[54,29,63,13],[54,30,63,28,"subState"],[54,38,63,13],[54,40,63,38,"key"],[54,43,63,13],[54,45,63,43,"lastState"],[54,54,63,13],[54,55,63,6],[55,0,64,5],[55,7,62,19],[55,9,64,7,"lastState"],[55,18,64,16],[55,19,64,17,"key"],[55,22,64,16],[55,23,62,19],[55,24,62,4],[57,0,66,4],[57,10,66,8,"endState"],[57,18,66,16],[57,23,66,21,"undefined"],[57,32,66,4],[57,34,66,32],[58,0,67,6],[58,12,67,10],[59,0,68,8,"stagedState"],[59,10,68,8,"stagedState"],[59,21,68,19],[59,22,68,20,"key"],[59,25,68,19],[59,26,68,8],[59,29,68,27,"serialize"],[59,38,68,36],[59,39,68,37,"endState"],[59,47,68,36],[59,48,68,8],[60,0,69,7],[60,9,67,6],[60,10,69,8],[60,17,69,15,"err"],[60,20,69,8],[60,22,69,20],[61,0,70,8,"console"],[61,10,70,8,"console"],[61,17,70,15],[61,18,70,16,"error"],[61,23,70,8],[61,24,70,22],[61,81,70,8],[61,83,70,81,"err"],[61,86,70,8],[62,0,71,7],[63,0,72,5],[63,7,66,4],[63,13,72,11],[64,0,74,6],[64,15,74,13,"stagedState"],[64,26,74,24],[64,27,74,25,"key"],[64,30,74,24],[64,31,74,6],[65,0,75,5],[67,0,77,4],[67,10,77,8,"keysToProcess"],[67,23,77,21],[67,24,77,22,"length"],[67,30,77,8],[67,35,77,33],[67,36,77,4],[67,38,77,36],[68,0,78,6,"writeStagedState"],[68,8,78,6,"writeStagedState"],[68,24,78,22],[69,0,79,5],[70,0,80,3],[72,0,82,2],[72,13,82,11,"writeStagedState"],[72,29,82,2],[72,32,82,30],[73,0,84,4,"Object"],[73,6,84,4,"Object"],[73,12,84,10],[73,13,84,11,"keys"],[73,17,84,4],[73,18,84,16,"stagedState"],[73,29,84,4],[73,31,84,29,"forEach"],[73,38,84,4],[73,39,84,37],[73,49,84,47,"key"],[73,52,84,37],[73,54,84,52],[74,0,85,6],[74,12,85,10,"lastState"],[74,21,85,19],[74,22,85,20,"key"],[74,25,85,19],[74,26,85,10],[74,31,85,29,"undefined"],[74,40,85,6],[74,42,85,40],[75,0,86,8],[75,17,86,15,"stagedState"],[75,28,86,26],[75,29,86,27,"key"],[75,32,86,26],[75,33,86,8],[76,0,87,7],[77,0,88,5],[77,7,84,4],[78,0,90,4,"writePromise"],[78,6,90,4,"writePromise"],[78,18,90,16],[78,21,90,19,"storage"],[78,28,90,26],[78,29,90,27,"setItem"],[78,36,90,19],[78,37,90,35,"storageKey"],[78,47,90,19],[78,49,90,47,"serialize"],[78,58,90,56],[78,59,90,57,"stagedState"],[78,70,90,56],[78,71,90,19],[78,73,90,71,"catch"],[78,78,90,19],[78,79,90,77,"onWriteFail"],[78,90,90,19],[78,91,90,4],[79,0,91,3],[81,0,93,2],[81,13,93,11,"passWhitelistBlacklist"],[81,35,93,2],[81,36,93,34,"key"],[81,39,93,2],[81,41,93,39],[82,0,94,4],[82,10,94,8,"whitelist"],[82,19,94,17],[82,23,94,21,"whitelist"],[82,32,94,30],[82,33,94,31,"indexOf"],[82,40,94,21],[82,41,94,39,"key"],[82,44,94,21],[82,50,94,48],[82,51,94,49],[82,52,94,8],[82,56,94,54,"key"],[82,59,94,57],[82,64,94,62],[82,74,94,4],[82,76,94,74],[82,83,94,81],[82,88,94,74],[83,0,95,4],[83,10,95,8,"blacklist"],[83,19,95,17],[83,23,95,21,"blacklist"],[83,32,95,30],[83,33,95,31,"indexOf"],[83,40,95,21],[83,41,95,39,"key"],[83,44,95,21],[83,50,95,48],[83,51,95,49],[83,52,95,4],[83,54,95,52],[83,61,95,59],[83,66,95,52],[84,0,96,4],[84,13,96,11],[84,17,96,4],[85,0,97,3],[87,0,99,2],[87,13,99,11,"onWriteFail"],[87,24,99,2],[87,25,99,23,"err"],[87,28,99,2],[87,30,99,28],[88,0,101,4],[88,10,101,8,"err"],[88,13,101,11],[88,17,101,15,"process"],[88,24,101,22],[88,25,101,23,"env"],[88,28,101,15],[88,29,101,27,"NODE_ENV"],[88,37,101,15],[88,42,101,40],[88,54,101,4],[88,56,101,54],[89,0,102,6,"console"],[89,8,102,6,"console"],[89,15,102,13],[89,16,102,14,"error"],[89,21,102,6],[89,22,102,20],[89,42,102,6],[89,44,102,42,"err"],[89,47,102,6],[90,0,103,5],[91,0,104,3],[93,0,106,2],[93,8,106,6,"flush"],[93,13,106,11],[93,16,106,14],[93,25,106,23,"flush"],[93,30,106,14],[93,33,106,31],[94,0,107,4],[94,13,107,11,"keysToProcess"],[94,26,107,24],[94,27,107,25,"length"],[94,33,107,11],[94,38,107,36],[94,39,107,4],[94,41,107,39],[95,0,108,6,"processNextKey"],[95,8,108,6,"processNextKey"],[95,22,108,20],[96,0,109,5],[98,0,110,4],[98,13,110,11,"writePromise"],[98,25,110,23],[98,29,110,27,"Promise"],[98,36,110,34],[98,37,110,35,"resolve"],[98,44,110,27],[98,46,110,4],[99,0,111,3],[99,5,106,2],[101,0,114,2],[101,11,114,9],[102,0,115,4,"update"],[102,6,115,4,"update"],[102,12,115,10],[102,14,115,12,"update"],[102,20,114,9],[103,0,116,4,"flush"],[103,6,116,4,"flush"],[103,11,116,9],[103,13,116,11,"flush"],[104,0,114,9],[104,5,114,2],[105,0,118,1],[107,0,123,0],[107,11,123,9,"defaultSerialize"],[107,27,123,0],[107,28,123,26,"data"],[107,32,123,0],[107,34,123,32],[108,0,124,2],[108,11,124,9,"JSON"],[108,15,124,13],[108,16,124,14,"stringify"],[108,25,124,9],[108,26,124,24,"data"],[108,30,124,9],[108,31,124,2],[109,0,125,1]]},"type":"js/module"}]}