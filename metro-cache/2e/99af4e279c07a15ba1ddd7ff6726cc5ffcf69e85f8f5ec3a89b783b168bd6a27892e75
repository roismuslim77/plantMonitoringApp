{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  exports.__esModule = true;\n\n  var _typeof = typeof Symbol === \"function\" && typeof (typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== (typeof Symbol === \"function\" ? Symbol.prototype : \"@@prototype\") ? \"symbol\" : typeof obj;\n  };\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  exports.default = autoMergeLevel2;\n\n  function autoMergeLevel2(inboundState, originalState, reducedState, _ref) {\n    var debug = _ref.debug;\n\n    var newState = _extends({}, reducedState);\n\n    if (inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') {\n      Object.keys(inboundState).forEach(function (key) {\n        if (key === '_persist') return;\n\n        if (originalState[key] !== reducedState[key]) {\n          if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist/stateReconciler: sub state for key `%s` modified, skipping.', key);\n          return;\n        }\n\n        if (isPlainEnoughObject(reducedState[key])) {\n          newState[key] = _extends({}, newState[key], inboundState[key]);\n          return;\n        }\n\n        newState[key] = inboundState[key];\n      });\n    }\n\n    if (process.env.NODE_ENV !== 'production' && debug && inboundState && (typeof inboundState === 'undefined' ? 'undefined' : _typeof(inboundState)) === 'object') console.log('redux-persist/stateReconciler: rehydrated keys \\'' + Object.keys(inboundState).join(', ') + '\\'');\n    return newState;\n  }\n\n  function isPlainEnoughObject(o) {\n    return o !== null && !Array.isArray(o) && (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object';\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"exports"],[4,2,3,0,"exports"],[4,9,3,7],[4,10,3,8,"__esModule"],[4,20,3,0],[4,23,3,21],[4,27,3,0],[6,0,5,0],[6,6,5,4,"_typeof"],[6,13,5,11],[6,16,5,14],[6,23,5,21,"Symbol"],[6,29,5,14],[6,34,5,32],[6,44,5,14],[6,48,5,46],[6,87,5,53,"Symbol"],[6,93,5,59],[6,94,5,60,"iterator"],[6,102,5,46],[6,123,5,73],[6,131,5,14],[6,134,5,84],[6,144,5,94,"obj"],[6,147,5,84],[6,149,5,99],[7,0,5,101],[7,11,5,108],[7,18,5,115,"obj"],[7,21,5,101],[8,0,5,121],[8,3,5,14],[8,6,5,124],[8,16,5,134,"obj"],[8,19,5,124],[8,21,5,139],[9,0,5,141],[9,11,5,148,"obj"],[9,14,5,151],[9,18,5,155],[9,25,5,162,"Symbol"],[9,31,5,155],[9,36,5,173],[9,46,5,148],[9,50,5,187,"obj"],[9,53,5,190],[9,54,5,191,"constructor"],[9,65,5,187],[9,70,5,207,"Symbol"],[9,76,5,148],[9,80,5,217,"obj"],[9,83,5,220],[9,120,5,225,"Symbol"],[9,126,5,231],[9,127,5,232,"prototype"],[9,136,5,220],[9,153,5,148],[9,156,5,244],[9,164,5,148],[9,167,5,255],[9,174,5,262,"obj"],[9,177,5,141],[10,0,5,268],[10,3,5,0],[12,0,7,0],[12,6,7,4,"_extends"],[12,14,7,12],[12,17,7,15,"Object"],[12,23,7,21],[12,24,7,22,"assign"],[12,30,7,15],[12,34,7,32],[12,44,7,42,"target"],[12,50,7,32],[12,52,7,50],[13,0,7,52],[13,9,7,57],[13,13,7,61,"i"],[13,14,7,62],[13,17,7,65],[13,18,7,52],[13,20,7,68,"i"],[13,21,7,69],[13,24,7,72,"arguments"],[13,33,7,81],[13,34,7,82,"length"],[13,40,7,52],[13,42,7,90,"i"],[13,43,7,91],[13,45,7,52],[13,47,7,95],[14,0,7,97],[14,10,7,101,"source"],[14,16,7,107],[14,19,7,110,"arguments"],[14,28,7,119],[14,29,7,120,"i"],[14,30,7,119],[14,31,7,97],[16,0,7,124],[16,11,7,129],[16,15,7,133,"key"],[16,18,7,124],[16,22,7,140,"source"],[16,28,7,124],[16,30,7,148],[17,0,7,150],[17,12,7,154,"Object"],[17,18,7,160],[17,19,7,161,"prototype"],[17,28,7,154],[17,29,7,171,"hasOwnProperty"],[17,43,7,154],[17,44,7,186,"call"],[17,48,7,154],[17,49,7,191,"source"],[17,55,7,154],[17,57,7,199,"key"],[17,60,7,154],[17,61,7,150],[17,63,7,205],[18,0,7,207,"target"],[18,10,7,207,"target"],[18,16,7,213],[18,17,7,214,"key"],[18,20,7,213],[18,21,7,207],[18,24,7,221,"source"],[18,30,7,227],[18,31,7,228,"key"],[18,34,7,227],[18,35,7,207],[19,0,7,235],[20,0,7,237],[21,0,7,239],[23,0,7,240],[23,11,7,247,"target"],[23,17,7,240],[24,0,7,256],[24,3,7,0],[26,0,9,0,"exports"],[26,2,9,0,"exports"],[26,9,9,7],[26,10,9,8,"default"],[26,17,9,0],[26,20,9,18,"autoMergeLevel2"],[26,35,9,0],[28,0,10,0],[28,11,10,9,"autoMergeLevel2"],[28,26,10,0],[28,27,10,25,"inboundState"],[28,39,10,0],[28,41,10,39,"originalState"],[28,54,10,0],[28,56,10,54,"reducedState"],[28,68,10,0],[28,70,10,68,"_ref"],[28,74,10,0],[28,76,10,74],[29,0,11,2],[29,8,11,6,"debug"],[29,13,11,11],[29,16,11,14,"_ref"],[29,20,11,18],[29,21,11,19,"debug"],[29,26,11,2],[31,0,13,2],[31,8,13,6,"newState"],[31,16,13,14],[31,19,13,17,"_extends"],[31,27,13,25],[31,28,13,26],[31,30,13,25],[31,32,13,30,"reducedState"],[31,44,13,25],[31,45,13,2],[33,0,15,2],[33,8,15,6,"inboundState"],[33,20,15,18],[33,24,15,22],[33,25,15,23],[33,32,15,30,"inboundState"],[33,44,15,23],[33,49,15,47],[33,60,15,23],[33,63,15,61],[33,74,15,23],[33,77,15,75,"_typeof"],[33,84,15,82],[33,85,15,83,"inboundState"],[33,97,15,82],[33,98,15,22],[33,104,15,102],[33,112,15,2],[33,114,15,112],[34,0,16,4,"Object"],[34,6,16,4,"Object"],[34,12,16,10],[34,13,16,11,"keys"],[34,17,16,4],[34,18,16,16,"inboundState"],[34,30,16,4],[34,32,16,30,"forEach"],[34,39,16,4],[34,40,16,38],[34,50,16,48,"key"],[34,53,16,38],[34,55,16,53],[35,0,18,6],[35,12,18,10,"key"],[35,15,18,13],[35,20,18,18],[35,30,18,6],[35,32,18,30],[37,0,20,6],[37,12,20,10,"originalState"],[37,25,20,23],[37,26,20,24,"key"],[37,29,20,23],[37,30,20,10],[37,35,20,33,"reducedState"],[37,47,20,45],[37,48,20,46,"key"],[37,51,20,45],[37,52,20,6],[37,54,20,52],[38,0,21,8],[38,14,21,12,"process"],[38,21,21,19],[38,22,21,20,"env"],[38,25,21,12],[38,26,21,24,"NODE_ENV"],[38,34,21,12],[38,39,21,37],[38,51,21,12],[38,55,21,53,"debug"],[38,60,21,8],[38,62,21,60,"console"],[38,69,21,67],[38,70,21,68,"log"],[38,73,21,60],[38,74,21,72],[38,149,21,60],[38,151,21,149,"key"],[38,154,21,60],[39,0,22,8],[40,0,23,7],[42,0,24,6],[42,12,24,10,"isPlainEnoughObject"],[42,31,24,29],[42,32,24,30,"reducedState"],[42,44,24,42],[42,45,24,43,"key"],[42,48,24,42],[42,49,24,29],[42,50,24,6],[42,52,24,50],[43,0,26,8,"newState"],[43,10,26,8,"newState"],[43,18,26,16],[43,19,26,17,"key"],[43,22,26,16],[43,23,26,8],[43,26,26,24,"_extends"],[43,34,26,32],[43,35,26,33],[43,37,26,32],[43,39,26,37,"newState"],[43,47,26,45],[43,48,26,46,"key"],[43,51,26,45],[43,52,26,32],[43,54,26,52,"inboundState"],[43,66,26,64],[43,67,26,65,"key"],[43,70,26,64],[43,71,26,32],[43,72,26,8],[44,0,27,8],[45,0,28,7],[47,0,30,6,"newState"],[47,8,30,6,"newState"],[47,16,30,14],[47,17,30,15,"key"],[47,20,30,14],[47,21,30,6],[47,24,30,22,"inboundState"],[47,36,30,34],[47,37,30,35,"key"],[47,40,30,34],[47,41,30,6],[48,0,31,5],[48,7,16,4],[49,0,32,3],[51,0,34,2],[51,8,34,6,"process"],[51,15,34,13],[51,16,34,14,"env"],[51,19,34,6],[51,20,34,18,"NODE_ENV"],[51,28,34,6],[51,33,34,31],[51,45,34,6],[51,49,34,47,"debug"],[51,54,34,6],[51,58,34,56,"inboundState"],[51,70,34,6],[51,74,34,72],[51,75,34,73],[51,82,34,80,"inboundState"],[51,94,34,73],[51,99,34,97],[51,110,34,73],[51,113,34,111],[51,124,34,73],[51,127,34,125,"_typeof"],[51,134,34,132],[51,135,34,133,"inboundState"],[51,147,34,132],[51,148,34,72],[51,154,34,152],[51,162,34,2],[51,164,34,162,"console"],[51,171,34,169],[51,172,34,170,"log"],[51,175,34,162],[51,176,34,174],[51,230,34,228,"Object"],[51,236,34,234],[51,237,34,235,"keys"],[51,241,34,228],[51,242,34,240,"inboundState"],[51,254,34,228],[51,256,34,254,"join"],[51,260,34,228],[51,261,34,259],[51,265,34,228],[51,266,34,174],[51,269,34,267],[51,273,34,162],[52,0,36,2],[52,11,36,9,"newState"],[52,19,36,2],[53,0,37,1],[55,0,46,0],[55,11,46,9,"isPlainEnoughObject"],[55,30,46,0],[55,31,46,29,"o"],[55,32,46,0],[55,34,46,32],[56,0,47,2],[56,11,47,9,"o"],[56,12,47,10],[56,17,47,15],[56,21,47,9],[56,25,47,23],[56,26,47,24,"Array"],[56,31,47,29],[56,32,47,30,"isArray"],[56,39,47,24],[56,40,47,38,"o"],[56,41,47,24],[56,42,47,9],[56,46,47,44],[56,47,47,45],[56,54,47,52,"o"],[56,55,47,45],[56,60,47,58],[56,71,47,45],[56,74,47,72],[56,85,47,45],[56,88,47,86,"_typeof"],[56,95,47,93],[56,96,47,94,"o"],[56,97,47,93],[56,98,47,44],[56,104,47,102],[56,112,47,2],[57,0,48,1]]},"type":"js/module"}]}