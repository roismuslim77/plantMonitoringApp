{"dependencies":[{"name":"./utils/invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var _invariant = _$$_REQUIRE(_dependencyMap[0], \"./utils/invariant\");\n\n  var _invariant2 = _interopRequireDefault(_invariant);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var StateUtils = {\n    get: function get(state, key) {\n      return state.routes.find(function (route) {\n        return route.key === key;\n      }) || null;\n    },\n    indexOf: function indexOf(state, key) {\n      return state.routes.findIndex(function (route) {\n        return route.key === key;\n      });\n    },\n    has: function has(state, key) {\n      return !!state.routes.some(function (route) {\n        return route.key === key;\n      });\n    },\n    push: function push(state, route) {\n      (0, _invariant2.default)(StateUtils.indexOf(state, route.key) === -1, 'should not push route with duplicated key %s', route.key);\n      var routes = state.routes.slice();\n      routes.push(route);\n      return _extends({}, state, {\n        index: routes.length - 1,\n        routes: routes\n      });\n    },\n    pop: function pop(state) {\n      if (state.index <= 0) {\n        return state;\n      }\n\n      var routes = state.routes.slice(0, -1);\n      return _extends({}, state, {\n        index: routes.length - 1,\n        routes: routes\n      });\n    },\n    jumpToIndex: function jumpToIndex(state, index) {\n      if (index === state.index) {\n        return state;\n      }\n\n      (0, _invariant2.default)(!!state.routes[index], 'invalid index %s to jump to', index);\n      return _extends({}, state, {\n        index: index\n      });\n    },\n    jumpTo: function jumpTo(state, key) {\n      var index = StateUtils.indexOf(state, key);\n      return StateUtils.jumpToIndex(state, index);\n    },\n    back: function back(state) {\n      var index = state.index - 1;\n      var route = state.routes[index];\n      return route ? StateUtils.jumpToIndex(state, index) : state;\n    },\n    forward: function forward(state) {\n      var index = state.index + 1;\n      var route = state.routes[index];\n      return route ? StateUtils.jumpToIndex(state, index) : state;\n    },\n    replaceAndPrune: function replaceAndPrune(state, key, route) {\n      var index = StateUtils.indexOf(state, key);\n      var replaced = StateUtils.replaceAtIndex(state, index, route);\n      return _extends({}, replaced, {\n        routes: replaced.routes.slice(0, index + 1)\n      });\n    },\n    replaceAt: function replaceAt(state, key, route) {\n      var preserveIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var index = StateUtils.indexOf(state, key);\n      var nextIndex = preserveIndex ? state.index : index;\n      var nextState = StateUtils.replaceAtIndex(state, index, route);\n      nextState.index = nextIndex;\n      return nextState;\n    },\n    replaceAtIndex: function replaceAtIndex(state, index, route) {\n      (0, _invariant2.default)(!!state.routes[index], 'invalid index %s for replacing route %s', index, route.key);\n\n      if (state.routes[index] === route && index === state.index) {\n        return state;\n      }\n\n      var routes = state.routes.slice();\n      routes[index] = route;\n      return _extends({}, state, {\n        index: index,\n        routes: routes\n      });\n    },\n    reset: function reset(state, routes, index) {\n      (0, _invariant2.default)(routes.length && Array.isArray(routes), 'invalid routes to replace');\n      var nextIndex = index === undefined ? routes.length - 1 : index;\n\n      if (state.routes.length === routes.length && state.index === nextIndex) {\n        var compare = function compare(route, ii) {\n          return routes[ii] === route;\n        };\n\n        if (state.routes.every(compare)) {\n          return state;\n        }\n      }\n\n      (0, _invariant2.default)(!!routes[nextIndex], 'invalid index %s to reset', nextIndex);\n      return _extends({}, state, {\n        index: nextIndex,\n        routes: routes\n      });\n    }\n  };\n  exports.default = StateUtils;\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[8,0,7,0],[8,6,7,4,"_extends"],[8,14,7,12],[8,17,7,15,"Object"],[8,23,7,21],[8,24,7,22,"assign"],[8,30,7,15],[8,34,7,32],[8,44,7,42,"target"],[8,50,7,32],[8,52,7,50],[9,0,7,52],[9,9,7,57],[9,13,7,61,"i"],[9,14,7,62],[9,17,7,65],[9,18,7,52],[9,20,7,68,"i"],[9,21,7,69],[9,24,7,72,"arguments"],[9,33,7,81],[9,34,7,82,"length"],[9,40,7,52],[9,42,7,90,"i"],[9,43,7,91],[9,45,7,52],[9,47,7,95],[10,0,7,97],[10,10,7,101,"source"],[10,16,7,107],[10,19,7,110,"arguments"],[10,28,7,119],[10,29,7,120,"i"],[10,30,7,119],[10,31,7,97],[12,0,7,124],[12,11,7,129],[12,15,7,133,"key"],[12,18,7,124],[12,22,7,140,"source"],[12,28,7,124],[12,30,7,148],[13,0,7,150],[13,12,7,154,"Object"],[13,18,7,160],[13,19,7,161,"prototype"],[13,28,7,154],[13,29,7,171,"hasOwnProperty"],[13,43,7,154],[13,44,7,186,"call"],[13,48,7,154],[13,49,7,191,"source"],[13,55,7,154],[13,57,7,199,"key"],[13,60,7,154],[13,61,7,150],[13,63,7,205],[14,0,7,207,"target"],[14,10,7,207,"target"],[14,16,7,213],[14,17,7,214,"key"],[14,20,7,213],[14,21,7,207],[14,24,7,221,"source"],[14,30,7,227],[14,31,7,228,"key"],[14,34,7,227],[14,35,7,207],[15,0,7,235],[16,0,7,237],[17,0,7,239],[19,0,7,240],[19,11,7,247,"target"],[19,17,7,240],[20,0,7,256],[20,3,7,0],[22,0,9,0],[22,6,9,4,"_invariant"],[22,16,9,14],[22,19,9,17,"require"],[22,30,9,24],[22,70,9,0],[24,0,11,0],[24,6,11,4,"_invariant2"],[24,17,11,15],[24,20,11,18,"_interopRequireDefault"],[24,42,11,40],[24,43,11,41,"_invariant"],[24,53,11,40],[24,54,11,0],[26,0,13,0],[26,11,13,9,"_interopRequireDefault"],[26,33,13,0],[26,34,13,32,"obj"],[26,37,13,0],[26,39,13,37],[27,0,13,39],[27,11,13,46,"obj"],[27,14,13,49],[27,18,13,53,"obj"],[27,21,13,56],[27,22,13,57,"__esModule"],[27,32,13,46],[27,35,13,70,"obj"],[27,38,13,46],[27,41,13,76],[28,0,13,78,"default"],[28,6,13,78,"default"],[28,13,13,85],[28,15,13,87,"obj"],[29,0,13,76],[29,5,13,39],[30,0,13,95],[32,0,23,0],[32,6,23,4,"StateUtils"],[32,16,23,14],[32,19,23,17],[33,0,27,2,"get"],[33,4,27,2,"get"],[33,7,23,17],[33,22,27,6,"state"],[33,27,23,17],[33,29,27,13,"key"],[33,32,23,17],[33,34,27,18],[34,0,28,4],[34,13,28,11,"state"],[34,18,28,16],[34,19,28,17,"routes"],[34,25,28,11],[34,26,28,24,"find"],[34,30,28,11],[34,31,28,29],[34,41,28,29,"route"],[34,46,28,34],[35,0,28,34],[35,15,28,38,"route"],[35,20,28,43],[35,21,28,44,"key"],[35,24,28,38],[35,29,28,52,"key"],[35,32,28,34],[36,0,28,34],[36,7,28,11],[36,12,28,60],[36,16,28,4],[37,0,29,3],[37,5,23,17],[38,0,35,2,"indexOf"],[38,4,35,2,"indexOf"],[38,11,23,17],[38,30,35,10,"state"],[38,35,23,17],[38,37,35,17,"key"],[38,40,23,17],[38,42,35,22],[39,0,36,4],[39,13,36,11,"state"],[39,18,36,16],[39,19,36,17,"routes"],[39,25,36,11],[39,26,36,24,"findIndex"],[39,35,36,11],[39,36,36,34],[39,46,36,34,"route"],[39,51,36,39],[40,0,36,39],[40,15,36,43,"route"],[40,20,36,48],[40,21,36,49,"key"],[40,24,36,43],[40,29,36,57,"key"],[40,32,36,39],[41,0,36,39],[41,7,36,11],[41,8,36,4],[42,0,37,3],[42,5,23,17],[43,0,43,2,"has"],[43,4,43,2,"has"],[43,7,23,17],[43,22,43,6,"state"],[43,27,23,17],[43,29,43,13,"key"],[43,32,23,17],[43,34,43,18],[44,0,44,4],[44,13,44,11],[44,14,44,12],[44,15,44,13,"state"],[44,20,44,18],[44,21,44,19,"routes"],[44,27,44,13],[44,28,44,26,"some"],[44,32,44,13],[44,33,44,31],[44,43,44,31,"route"],[44,48,44,36],[45,0,44,36],[45,15,44,40,"route"],[45,20,44,45],[45,21,44,46,"key"],[45,24,44,40],[45,29,44,54,"key"],[45,32,44,36],[46,0,44,36],[46,7,44,13],[46,8,44,4],[47,0,45,3],[47,5,23,17],[48,0,52,2,"push"],[48,4,52,2,"push"],[48,8,23,17],[48,24,52,7,"state"],[48,29,23,17],[48,31,52,14,"route"],[48,36,23,17],[48,38,52,21],[49,0,53,4],[49,7,53,5],[49,10,53,8,"_invariant2"],[49,21,53,19],[49,22,53,20,"default"],[49,29,53,4],[49,31,53,29,"StateUtils"],[49,41,53,39],[49,42,53,40,"indexOf"],[49,49,53,29],[49,50,53,48,"state"],[49,55,53,29],[49,57,53,55,"route"],[49,62,53,60],[49,63,53,61,"key"],[49,66,53,29],[49,72,53,70],[49,73,53,71],[49,74,53,4],[49,76,53,74],[49,122,53,4],[49,124,53,122,"route"],[49,129,53,127],[49,130,53,128,"key"],[49,133,53,4],[50,0,55,4],[50,10,55,8,"routes"],[50,16,55,14],[50,19,55,17,"state"],[50,24,55,22],[50,25,55,23,"routes"],[50,31,55,17],[50,32,55,30,"slice"],[50,37,55,17],[50,39,55,4],[51,0,56,4,"routes"],[51,6,56,4,"routes"],[51,12,56,10],[51,13,56,11,"push"],[51,17,56,4],[51,18,56,16,"route"],[51,23,56,4],[52,0,58,4],[52,13,58,11,"_extends"],[52,21,58,19],[52,22,58,20],[52,24,58,19],[52,26,58,24,"state"],[52,31,58,19],[52,33,58,31],[53,0,59,6,"index"],[53,8,59,6,"index"],[53,13,59,11],[53,15,59,13,"routes"],[53,21,59,19],[53,22,59,20,"length"],[53,28,59,13],[53,31,59,29],[53,32,58,31],[54,0,60,6,"routes"],[54,8,60,6,"routes"],[54,14,60,12],[54,16,60,6,"routes"],[55,0,58,31],[55,7,58,19],[55,8,58,4],[56,0,62,3],[56,5,23,17],[57,0,69,2,"pop"],[57,4,69,2,"pop"],[57,7,23,17],[57,22,69,6,"state"],[57,27,23,17],[57,29,69,13],[58,0,70,4],[58,10,70,8,"state"],[58,15,70,13],[58,16,70,14,"index"],[58,21,70,8],[58,25,70,23],[58,26,70,4],[58,28,70,26],[59,0,72,6],[59,15,72,13,"state"],[59,20,72,6],[60,0,73,5],[62,0,74,4],[62,10,74,8,"routes"],[62,16,74,14],[62,19,74,17,"state"],[62,24,74,22],[62,25,74,23,"routes"],[62,31,74,17],[62,32,74,30,"slice"],[62,37,74,17],[62,38,74,36],[62,39,74,17],[62,41,74,39],[62,42,74,40],[62,43,74,17],[62,44,74,4],[63,0,75,4],[63,13,75,11,"_extends"],[63,21,75,19],[63,22,75,20],[63,24,75,19],[63,26,75,24,"state"],[63,31,75,19],[63,33,75,31],[64,0,76,6,"index"],[64,8,76,6,"index"],[64,13,76,11],[64,15,76,13,"routes"],[64,21,76,19],[64,22,76,20,"length"],[64,28,76,13],[64,31,76,29],[64,32,75,31],[65,0,77,6,"routes"],[65,8,77,6,"routes"],[65,14,77,12],[65,16,77,6,"routes"],[66,0,75,31],[66,7,75,19],[66,8,75,4],[67,0,79,3],[67,5,23,17],[68,0,84,2,"jumpToIndex"],[68,4,84,2,"jumpToIndex"],[68,15,23,17],[68,38,84,14,"state"],[68,43,23,17],[68,45,84,21,"index"],[68,50,23,17],[68,52,84,28],[69,0,85,4],[69,10,85,8,"index"],[69,15,85,13],[69,20,85,18,"state"],[69,25,85,23],[69,26,85,24,"index"],[69,31,85,4],[69,33,85,31],[70,0,86,6],[70,15,86,13,"state"],[70,20,86,6],[71,0,87,5],[73,0,89,4],[73,7,89,5],[73,10,89,8,"_invariant2"],[73,21,89,19],[73,22,89,20,"default"],[73,29,89,4],[73,31,89,29],[73,32,89,30],[73,33,89,31,"state"],[73,38,89,36],[73,39,89,37,"routes"],[73,45,89,31],[73,46,89,44,"index"],[73,51,89,31],[73,52,89,4],[73,54,89,52],[73,83,89,4],[73,85,89,83,"index"],[73,90,89,4],[74,0,91,4],[74,13,91,11,"_extends"],[74,21,91,19],[74,22,91,20],[74,24,91,19],[74,26,91,24,"state"],[74,31,91,19],[74,33,91,31],[75,0,92,6,"index"],[75,8,92,6,"index"],[75,13,92,11],[75,15,92,6,"index"],[76,0,91,31],[76,7,91,19],[76,8,91,4],[77,0,94,3],[77,5,23,17],[78,0,99,2,"jumpTo"],[78,4,99,2,"jumpTo"],[78,10,23,17],[78,28,99,9,"state"],[78,33,23,17],[78,35,99,16,"key"],[78,38,23,17],[78,40,99,21],[79,0,100,4],[79,10,100,8,"index"],[79,15,100,13],[79,18,100,16,"StateUtils"],[79,28,100,26],[79,29,100,27,"indexOf"],[79,36,100,16],[79,37,100,35,"state"],[79,42,100,16],[79,44,100,42,"key"],[79,47,100,16],[79,48,100,4],[80,0,101,4],[80,13,101,11,"StateUtils"],[80,23,101,21],[80,24,101,22,"jumpToIndex"],[80,35,101,11],[80,36,101,34,"state"],[80,41,101,11],[80,43,101,41,"index"],[80,48,101,11],[80,49,101,4],[81,0,102,3],[81,5,23,17],[82,0,107,2,"back"],[82,4,107,2,"back"],[82,8,23,17],[82,24,107,7,"state"],[82,29,23,17],[82,31,107,14],[83,0,108,4],[83,10,108,8,"index"],[83,15,108,13],[83,18,108,16,"state"],[83,23,108,21],[83,24,108,22,"index"],[83,29,108,16],[83,32,108,30],[83,33,108,4],[84,0,109,4],[84,10,109,8,"route"],[84,15,109,13],[84,18,109,16,"state"],[84,23,109,21],[84,24,109,22,"routes"],[84,30,109,16],[84,31,109,29,"index"],[84,36,109,16],[84,37,109,4],[85,0,110,4],[85,13,110,11,"route"],[85,18,110,16],[85,21,110,19,"StateUtils"],[85,31,110,29],[85,32,110,30,"jumpToIndex"],[85,43,110,19],[85,44,110,42,"state"],[85,49,110,19],[85,51,110,49,"index"],[85,56,110,19],[85,57,110,16],[85,60,110,58,"state"],[85,65,110,4],[86,0,111,3],[86,5,23,17],[87,0,116,2,"forward"],[87,4,116,2,"forward"],[87,11,23,17],[87,30,116,10,"state"],[87,35,23,17],[87,37,116,17],[88,0,117,4],[88,10,117,8,"index"],[88,15,117,13],[88,18,117,16,"state"],[88,23,117,21],[88,24,117,22,"index"],[88,29,117,16],[88,32,117,30],[88,33,117,4],[89,0,118,4],[89,10,118,8,"route"],[89,15,118,13],[89,18,118,16,"state"],[89,23,118,21],[89,24,118,22,"routes"],[89,30,118,16],[89,31,118,29,"index"],[89,36,118,16],[89,37,118,4],[90,0,119,4],[90,13,119,11,"route"],[90,18,119,16],[90,21,119,19,"StateUtils"],[90,31,119,29],[90,32,119,30,"jumpToIndex"],[90,43,119,19],[90,44,119,42,"state"],[90,49,119,19],[90,51,119,49,"index"],[90,56,119,19],[90,57,119,16],[90,60,119,58,"state"],[90,65,119,4],[91,0,120,3],[91,5,23,17],[92,0,127,2,"replaceAndPrune"],[92,4,127,2,"replaceAndPrune"],[92,19,23,17],[92,46,127,18,"state"],[92,51,23,17],[92,53,127,25,"key"],[92,56,23,17],[92,58,127,30,"route"],[92,63,23,17],[92,65,127,37],[93,0,128,4],[93,10,128,8,"index"],[93,15,128,13],[93,18,128,16,"StateUtils"],[93,28,128,26],[93,29,128,27,"indexOf"],[93,36,128,16],[93,37,128,35,"state"],[93,42,128,16],[93,44,128,42,"key"],[93,47,128,16],[93,48,128,4],[94,0,129,4],[94,10,129,8,"replaced"],[94,18,129,16],[94,21,129,19,"StateUtils"],[94,31,129,29],[94,32,129,30,"replaceAtIndex"],[94,46,129,19],[94,47,129,45,"state"],[94,52,129,19],[94,54,129,52,"index"],[94,59,129,19],[94,61,129,59,"route"],[94,66,129,19],[94,67,129,4],[95,0,131,4],[95,13,131,11,"_extends"],[95,21,131,19],[95,22,131,20],[95,24,131,19],[95,26,131,24,"replaced"],[95,34,131,19],[95,36,131,34],[96,0,132,6,"routes"],[96,8,132,6,"routes"],[96,14,132,12],[96,16,132,14,"replaced"],[96,24,132,22],[96,25,132,23,"routes"],[96,31,132,14],[96,32,132,30,"slice"],[96,37,132,14],[96,38,132,36],[96,39,132,14],[96,41,132,39,"index"],[96,46,132,44],[96,49,132,47],[96,50,132,14],[97,0,131,34],[97,7,131,19],[97,8,131,4],[98,0,134,3],[98,5,23,17],[99,0,143,2,"replaceAt"],[99,4,143,2,"replaceAt"],[99,13,23,17],[99,34,143,12,"state"],[99,39,23,17],[99,41,143,19,"key"],[99,44,23,17],[99,46,143,24,"route"],[99,51,23,17],[99,53,143,54],[100,0,143,54],[100,10,143,31,"preserveIndex"],[100,23,143,54],[100,94,143,47],[100,99,143,54],[101,0,144,4],[101,10,144,8,"index"],[101,15,144,13],[101,18,144,16,"StateUtils"],[101,28,144,26],[101,29,144,27,"indexOf"],[101,36,144,16],[101,37,144,35,"state"],[101,42,144,16],[101,44,144,42,"key"],[101,47,144,16],[101,48,144,4],[102,0,145,4],[102,10,145,8,"nextIndex"],[102,19,145,17],[102,22,145,20,"preserveIndex"],[102,35,145,33],[102,38,145,36,"state"],[102,43,145,41],[102,44,145,42,"index"],[102,49,145,33],[102,52,145,50,"index"],[102,57,145,4],[103,0,146,4],[103,10,146,8,"nextState"],[103,19,146,17],[103,22,146,20,"StateUtils"],[103,32,146,30],[103,33,146,31,"replaceAtIndex"],[103,47,146,20],[103,48,146,46,"state"],[103,53,146,20],[103,55,146,53,"index"],[103,60,146,20],[103,62,146,60,"route"],[103,67,146,20],[103,68,146,4],[104,0,147,4,"nextState"],[104,6,147,4,"nextState"],[104,15,147,13],[104,16,147,14,"index"],[104,21,147,4],[104,24,147,22,"nextIndex"],[104,33,147,4],[105,0,148,4],[105,13,148,11,"nextState"],[105,22,148,4],[106,0,149,3],[106,5,23,17],[107,0,156,2,"replaceAtIndex"],[107,4,156,2,"replaceAtIndex"],[107,18,23,17],[107,44,156,17,"state"],[107,49,23,17],[107,51,156,24,"index"],[107,56,23,17],[107,58,156,31,"route"],[107,63,23,17],[107,65,156,38],[108,0,157,4],[108,7,157,5],[108,10,157,8,"_invariant2"],[108,21,157,19],[108,22,157,20,"default"],[108,29,157,4],[108,31,157,29],[108,32,157,30],[108,33,157,31,"state"],[108,38,157,36],[108,39,157,37,"routes"],[108,45,157,31],[108,46,157,44,"index"],[108,51,157,31],[108,52,157,4],[108,54,157,52],[108,95,157,4],[108,97,157,95,"index"],[108,102,157,4],[108,104,157,102,"route"],[108,109,157,107],[108,110,157,108,"key"],[108,113,157,4],[110,0,159,4],[110,10,159,8,"state"],[110,15,159,13],[110,16,159,14,"routes"],[110,22,159,8],[110,23,159,21,"index"],[110,28,159,8],[110,34,159,32,"route"],[110,39,159,8],[110,43,159,41,"index"],[110,48,159,46],[110,53,159,51,"state"],[110,58,159,56],[110,59,159,57,"index"],[110,64,159,4],[110,66,159,64],[111,0,160,6],[111,15,160,13,"state"],[111,20,160,6],[112,0,161,5],[114,0,163,4],[114,10,163,8,"routes"],[114,16,163,14],[114,19,163,17,"state"],[114,24,163,22],[114,25,163,23,"routes"],[114,31,163,17],[114,32,163,30,"slice"],[114,37,163,17],[114,39,163,4],[115,0,164,4,"routes"],[115,6,164,4,"routes"],[115,12,164,10],[115,13,164,11,"index"],[115,18,164,10],[115,19,164,4],[115,22,164,20,"route"],[115,27,164,4],[116,0,166,4],[116,13,166,11,"_extends"],[116,21,166,19],[116,22,166,20],[116,24,166,19],[116,26,166,24,"state"],[116,31,166,19],[116,33,166,31],[117,0,167,6,"index"],[117,8,167,6,"index"],[117,13,167,11],[117,15,167,6,"index"],[117,20,166,31],[118,0,168,6,"routes"],[118,8,168,6,"routes"],[118,14,168,12],[118,16,168,6,"routes"],[119,0,166,31],[119,7,166,19],[119,8,166,4],[120,0,170,3],[120,5,23,17],[121,0,177,2,"reset"],[121,4,177,2,"reset"],[121,9,23,17],[121,26,177,8,"state"],[121,31,23,17],[121,33,177,15,"routes"],[121,39,23,17],[121,41,177,23,"index"],[121,46,23,17],[121,48,177,30],[122,0,178,4],[122,7,178,5],[122,10,178,8,"_invariant2"],[122,21,178,19],[122,22,178,20,"default"],[122,29,178,4],[122,31,178,29,"routes"],[122,37,178,35],[122,38,178,36,"length"],[122,44,178,29],[122,48,178,46,"Array"],[122,53,178,51],[122,54,178,52,"isArray"],[122,61,178,46],[122,62,178,60,"routes"],[122,68,178,46],[122,69,178,4],[122,71,178,69],[122,98,178,4],[123,0,180,4],[123,10,180,8,"nextIndex"],[123,19,180,17],[123,22,180,20,"index"],[123,27,180,25],[123,32,180,30,"undefined"],[123,41,180,20],[123,44,180,42,"routes"],[123,50,180,48],[123,51,180,49,"length"],[123,57,180,42],[123,60,180,58],[123,61,180,20],[123,64,180,62,"index"],[123,69,180,4],[125,0,182,4],[125,10,182,8,"state"],[125,15,182,13],[125,16,182,14,"routes"],[125,22,182,8],[125,23,182,21,"length"],[125,29,182,8],[125,34,182,32,"routes"],[125,40,182,38],[125,41,182,39,"length"],[125,47,182,8],[125,51,182,49,"state"],[125,56,182,54],[125,57,182,55,"index"],[125,62,182,49],[125,67,182,65,"nextIndex"],[125,76,182,4],[125,78,182,76],[126,0,183,6],[126,12,183,10,"compare"],[126,19,183,17],[126,22,183,20],[126,31,183,10,"compare"],[126,38,183,20],[126,39,183,21,"route"],[126,44,183,20],[126,46,183,28,"ii"],[126,48,183,20],[127,0,183,20],[127,17,183,35,"routes"],[127,23,183,41],[127,24,183,42,"ii"],[127,26,183,41],[127,27,183,35],[127,32,183,50,"route"],[127,37,183,20],[128,0,183,20],[128,9,183,6],[130,0,184,6],[130,12,184,10,"state"],[130,17,184,15],[130,18,184,16,"routes"],[130,24,184,10],[130,25,184,23,"every"],[130,30,184,10],[130,31,184,29,"compare"],[130,38,184,10],[130,39,184,6],[130,41,184,39],[131,0,185,8],[131,17,185,15,"state"],[131,22,185,8],[132,0,186,7],[133,0,187,5],[135,0,189,4],[135,7,189,5],[135,10,189,8,"_invariant2"],[135,21,189,19],[135,22,189,20,"default"],[135,29,189,4],[135,31,189,29],[135,32,189,30],[135,33,189,31,"routes"],[135,39,189,37],[135,40,189,38,"nextIndex"],[135,49,189,37],[135,50,189,4],[135,52,189,50],[135,79,189,4],[135,81,189,79,"nextIndex"],[135,90,189,4],[136,0,191,4],[136,13,191,11,"_extends"],[136,21,191,19],[136,22,191,20],[136,24,191,19],[136,26,191,24,"state"],[136,31,191,19],[136,33,191,31],[137,0,192,6,"index"],[137,8,192,6,"index"],[137,13,192,11],[137,15,192,13,"nextIndex"],[137,24,191,31],[138,0,193,6,"routes"],[138,8,193,6,"routes"],[138,14,193,12],[138,16,193,6,"routes"],[139,0,191,31],[139,7,191,19],[139,8,191,4],[140,0,195,3],[141,0,23,17],[141,3,23,0],[142,0,198,0,"exports"],[142,2,198,0,"exports"],[142,9,198,7],[142,10,198,8,"default"],[142,17,198,0],[142,20,198,18,"StateUtils"],[142,30,198,0]]},"type":"js/module"}]}