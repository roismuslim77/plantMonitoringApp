{"dependencies":[{"name":"./../utils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var utils = _$$_REQUIRE(_dependencyMap[0], \"./../utils\");\n\n  var ignoreDuplicateOf = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];\n\n  module.exports = function parseHeaders(headers) {\n    var parsed = {};\n    var key;\n    var val;\n    var i;\n\n    if (!headers) {\n      return parsed;\n    }\n\n    utils.forEach(headers.split('\\n'), function parser(line) {\n      i = line.indexOf(':');\n      key = utils.trim(line.substr(0, i)).toLowerCase();\n      val = utils.trim(line.substr(i + 1));\n\n      if (key) {\n        if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n          return;\n        }\n\n        if (key === 'set-cookie') {\n          parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n        } else {\n          parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n        }\n      }\n    });\n    return parsed;\n  };\n});","map":[[2,0,1,0],[4,0,3,0],[4,6,3,4,"utils"],[4,11,3,9],[4,14,3,12,"require"],[4,25,3,19],[4,58,3,0],[6,0,7,0],[6,6,7,4,"ignoreDuplicateOf"],[6,23,7,21],[6,26,7,24],[6,27,8,2],[6,32,7,24],[6,34,8,9],[6,49,7,24],[6,51,8,26],[6,67,7,24],[6,69,8,44],[6,83,7,24],[6,85,8,60],[6,91,7,24],[6,93,9,2],[6,102,7,24],[6,104,9,13],[6,110,7,24],[6,112,9,21],[6,118,7,24],[6,120,9,29],[6,139,7,24],[6,141,9,50],[6,162,7,24],[6,164,10,2],[6,179,7,24],[6,181,10,19],[6,191,7,24],[6,193,10,31],[6,207,7,24],[6,209,10,47],[6,230,7,24],[6,232,11,2],[6,241,7,24],[6,243,11,13],[6,256,7,24],[6,258,11,28],[6,270,7,24],[6,271,7,0],[8,0,27,0,"module"],[8,2,27,0,"module"],[8,8,27,6],[8,9,27,7,"exports"],[8,16,27,0],[8,19,27,17],[8,28,27,26,"parseHeaders"],[8,40,27,17],[8,41,27,39,"headers"],[8,48,27,17],[8,50,27,48],[9,0,28,2],[9,8,28,6,"parsed"],[9,14,28,12],[9,17,28,15],[9,19,28,2],[10,0,29,2],[10,8,29,6,"key"],[10,11,29,2],[11,0,30,2],[11,8,30,6,"val"],[11,11,30,2],[12,0,31,2],[12,8,31,6,"i"],[12,9,31,2],[14,0,33,2],[14,8,33,6],[14,9,33,7,"headers"],[14,16,33,2],[14,18,33,16],[15,0,33,18],[15,13,33,25,"parsed"],[15,19,33,18],[16,0,33,34],[18,0,35,2,"utils"],[18,4,35,2,"utils"],[18,9,35,7],[18,10,35,8,"forEach"],[18,17,35,2],[18,18,35,16,"headers"],[18,25,35,23],[18,26,35,24,"split"],[18,31,35,16],[18,32,35,30],[18,36,35,16],[18,37,35,2],[18,39,35,37],[18,48,35,46,"parser"],[18,54,35,37],[18,55,35,53,"line"],[18,59,35,37],[18,61,35,59],[19,0,36,4,"i"],[19,6,36,4,"i"],[19,7,36,5],[19,10,36,8,"line"],[19,14,36,12],[19,15,36,13,"indexOf"],[19,22,36,8],[19,23,36,21],[19,26,36,8],[19,27,36,4],[20,0,37,4,"key"],[20,6,37,4,"key"],[20,9,37,7],[20,12,37,10,"utils"],[20,17,37,15],[20,18,37,16,"trim"],[20,22,37,10],[20,23,37,21,"line"],[20,27,37,25],[20,28,37,26,"substr"],[20,34,37,21],[20,35,37,33],[20,36,37,21],[20,38,37,36,"i"],[20,39,37,21],[20,40,37,10],[20,42,37,40,"toLowerCase"],[20,53,37,10],[20,55,37,4],[21,0,38,4,"val"],[21,6,38,4,"val"],[21,9,38,7],[21,12,38,10,"utils"],[21,17,38,15],[21,18,38,16,"trim"],[21,22,38,10],[21,23,38,21,"line"],[21,27,38,25],[21,28,38,26,"substr"],[21,34,38,21],[21,35,38,33,"i"],[21,36,38,34],[21,39,38,37],[21,40,38,21],[21,41,38,10],[21,42,38,4],[23,0,40,4],[23,10,40,8,"key"],[23,13,40,4],[23,15,40,13],[24,0,41,6],[24,12,41,10,"parsed"],[24,18,41,16],[24,19,41,17,"key"],[24,22,41,16],[24,23,41,10],[24,27,41,25,"ignoreDuplicateOf"],[24,44,41,42],[24,45,41,43,"indexOf"],[24,52,41,25],[24,53,41,51,"key"],[24,56,41,25],[24,61,41,59],[24,62,41,6],[24,64,41,62],[25,0,42,8],[26,0,43,7],[28,0,44,6],[28,12,44,10,"key"],[28,15,44,13],[28,20,44,18],[28,32,44,6],[28,34,44,32],[29,0,45,8,"parsed"],[29,10,45,8,"parsed"],[29,16,45,14],[29,17,45,15,"key"],[29,20,45,14],[29,21,45,8],[29,24,45,22],[29,25,45,23,"parsed"],[29,31,45,29],[29,32,45,30,"key"],[29,35,45,29],[29,36,45,23],[29,39,45,37,"parsed"],[29,45,45,43],[29,46,45,44,"key"],[29,49,45,43],[29,50,45,23],[29,53,45,51],[29,55,45,22],[29,57,45,55,"concat"],[29,63,45,22],[29,64,45,62],[29,65,45,63,"val"],[29,68,45,62],[29,69,45,22],[29,70,45,8],[30,0,46,7],[30,9,44,6],[30,15,46,13],[31,0,47,8,"parsed"],[31,10,47,8,"parsed"],[31,16,47,14],[31,17,47,15,"key"],[31,20,47,14],[31,21,47,8],[31,24,47,22,"parsed"],[31,30,47,28],[31,31,47,29,"key"],[31,34,47,28],[31,35,47,22],[31,38,47,36,"parsed"],[31,44,47,42],[31,45,47,43,"key"],[31,48,47,42],[31,49,47,36],[31,52,47,50],[31,56,47,36],[31,59,47,57,"val"],[31,62,47,22],[31,65,47,63,"val"],[31,68,47,8],[32,0,48,7],[33,0,49,5],[34,0,50,3],[34,5,35,2],[35,0,52,2],[35,11,52,9,"parsed"],[35,17,52,2],[36,0,53,1],[36,3,27,0]]},"type":"js/module"}]}